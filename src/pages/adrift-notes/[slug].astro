---
import Navbar from '../../components/organisms/Navbar.astro'
import MobileNav from '../../components/organisms/MobileNav.astro'
import ShareButton from '../../components/atoms/ShareButton.astro'
import ShareModal from '../../components/molecules/ShareModal.astro'

import { getCollection } from 'astro:content'
import { db, Authors } from 'astro:db'
import { eq } from 'astro:db'
import fs from 'fs'
import path from 'path'

export async function getStaticPaths() {
  const articles = await getCollection('adrift-notes', ({ data }) => {
    return !data.draft
  })

  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }))
}

const { article } = Astro.props

// Render the article content
const { Content } = await article.render()

// Get author information
const author = await db.select().from(Authors).where(eq(Authors.id, 1)).get()

// Calculate reading time (average 200 words per minute)
const wordCount = article.body.split(/\s+/).length
const readingTime = Math.ceil(wordCount / 200)

// Generate metadata for SEO
const title = `${article.data.title} - Adrift Notes`
const description = article.data.description
const url = `https://victorhugo.info/adrift-notes/${article.slug}`
const publishDate = article.data.publishDate.toISOString()
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="keywords" content={article.data.tags?.join(', ')} />
    <meta name="author" content="Victor Hugo" />
    <meta name="article:published_time" content={publishDate} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="article" />
    <meta property="og:url" content={url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="article:published_time" content={publishDate} />
    <meta property="article:author" content="Victor Hugo" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
     <link
       href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
       rel="stylesheet"
     />

   </head>
  <body>
    <Navbar />
    <main>
      <article class="adrift-article">
        <div class="container">

           <!-- Article Header with Metadata -->
           <header class="article-header">
             <div class="article-meta-section">
               <div class="author-info">
                 {author?.avatar && (
                   <img
                     src={author.avatar}
                     alt={`${author.name} avatar`}
                     class="author-avatar"
                     loading="lazy"
                   />
                 )}
                 <div class="author-details">
                   <span class="author-label">Autor</span>
                   <span class="author-name">{author?.name || 'Victor Hugo'}</span>
                 </div>
               </div>

               <div class="article-meta">
                 <div class="meta-item">
                   <span class="meta-label">Data de publica√ß√£o</span>
                   <time class="meta-value" datetime={article.data.publishDate.toISOString()}>
                     {article.data.publishDate.toLocaleDateString('pt-BR', {
                       year: 'numeric',
                       month: 'long',
                       day: 'numeric'
                     })}
                   </time>
                 </div>

                 <div class="meta-item">
                   <span class="meta-label">Tempo de leitura</span>
                   <span class="meta-value">{readingTime} min read</span>
                 </div>
               </div>

               {article.data.tags && article.data.tags.length > 0 && (
                 <div class="article-tags">
                   {article.data.tags.map((tag) => (
                     <span class="tag">{tag}</span>
                   ))}
                 </div>
               )}
             </div>

           <!-- Audio Player -->
           {fs.existsSync(path.join(process.cwd(), 'public', 'audio', `${article.slug}.mp3`)) && (
             <div class="audio-player">
               
               <audio id="article-audio" controls>
                 <source src={`/audio/${article.slug}.mp3`} type="audio/mpeg" />
                 Seu navegador n√£o suporta o elemento de √°udio.
               </audio>
               <h3>Ou√ßa este artigo</h3>
                <script>
                  const audio = document.getElementById('article-audio') as HTMLAudioElement;
                  if (audio) {
                    audio.playbackRate = 1.25;
                  }
                </script>
             </div>
           )}

             <h1 class="article-title">{article.data.title}</h1>
             <p class="article-description">{article.data.description}</p>

             <ShareButton title={title} url={url} />
           </header>

           <!-- Article Content -->
            <div class="article-content">
              <Content />
            </div>

           <!-- Author Section -->
          {author && (
            <section class="author-section">
              <h2>Mais sobre o autor</h2>
              <div class="author-card">
                {author.avatar && (
                  <img
                    src={author.avatar}
                    alt={`${author.name} avatar`}
                    class="author-avatar-large"
                    loading="lazy"
                  />
                )}
                <div class="author-content">
                  <h3 class="author-name">{author.name}</h3>
                  <p class="author-bio">{author.bio}</p>
                  <div class="author-links">
                    {author.nostr && (
                      <a
                        href={`https://primal.net/p/${author.nostr}`}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="author-link"
                        title="Nostr"
                      >
                        üü£
                      </a>
                    )}
                    {author.email && (
                      <a
                        href={`mailto:${author.email}`}
                        class="author-link"
                        title="Email"
                      >
                        ‚úâÔ∏è
                      </a>
                    )}
                    {author.twitter && (
                      <a
                        href={author.twitter}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="author-link"
                        title="Twitter"
                      >
                        üê¶
                      </a>
                    )}
                  </div>
                </div>
              </div>
            </section>
          )}

          <!-- Navigation -->
          <nav class="article-navigation">
            <a href="/adrift-notes" class="back-btn">‚Üê Voltar para Adrift Notes</a>
          </nav>
        </div>
      </article>
      </main>

      <MobileNav />

      <ShareModal title={title} url={url} />

     
  </body>
</html>

<style>
  :root {
    /* Light theme colors */
    --bg-primary: oklch(100% 0 0);
    --bg-secondary: oklch(96% 0.01 45);
    --bg-tertiary: oklch(92% 0.01 45);
    --text-primary: oklch(20% 0 0);
    --text-secondary: oklch(45% 0 0);
    --text-accent: oklch(65% 0.2 45);
    --border-color: oklch(92% 0.01 45);
    --shadow-color: oklch(0% 0 0 / 0.1);
  }

  [data-theme='dark'] {
    /* Dark theme colors */
    --bg-primary: oklch(8% 0 0);
    --bg-secondary: oklch(10% 0 0);
    --bg-tertiary: oklch(15% 0 0);
    --text-primary: oklch(85% 0 0);
    --text-secondary: oklch(70% 0 0);
    --text-accent: oklch(75% 0.2 45);
    --border-color: oklch(40% 0 0);
    --shadow-color: oklch(30% 0 0 / 1.6);
  }

  html {
    scroll-behavior: smooth;
  }

  * {
    box-sizing: border-box;
  }

  body {
    margin: 0;
    padding: 0;
    line-height: 1.6;
    background: var(--bg-primary);
    color: var(--text-primary);
    transition:
      background-color 0.3s ease,
      color 0.3s ease;
    font-family:
      'Inter',
      -apple-system,
      BlinkMacSystemFont,
      'Segoe UI',
      Roboto,
      sans-serif;
  }

  /* Theme transition for all elements */
  * {
    transition:
      color 0.3s ease,
      background-color 0.3s ease,
      border-color 0.3s ease,
      box-shadow 0.3s ease;
  }

  .adrift-article {
    padding: 5rem 0;
    background: var(--bg-primary);
    min-height: 100vh;
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .article-header {
    margin-bottom: 4rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--border-color);
  }

  .article-meta-section {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .author-info {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .author-avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid var(--border-color);
  }

  .author-details {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .author-label {
    font-size: 0.8rem;
    color: var(--text-secondary);
    text-transform: uppercase;
    font-weight: 600;
    letter-spacing: 0.5px;
  }

  .author-name {
    font-size: 1.1rem;
    color: var(--text-primary);
    font-weight: 600;
  }

  .article-meta {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .meta-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .meta-label {
    font-size: 0.8rem;
    color: var(--text-secondary);
    text-transform: uppercase;
    font-weight: 600;
    letter-spacing: 0.5px;
  }

  .meta-value {
    font-size: 1rem;
    color: var(--text-primary);
    font-weight: 500;
  }

  .article-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: var(--bg-tertiary);
    color: var(--text-secondary);
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 500;
    border: 1px solid var(--border-color);
  }

  .article-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    line-height: 1.2;
    text-align: center;
  }

  .article-description {
    font-size: 1.2rem;
    color: var(--text-secondary);
    line-height: 1.6;
    text-align: center;
    max-width: 600px;
    margin: 0 auto;
  }

  .article-content {
    max-width: 700px;
    margin: 0 auto;
  }

  .audio-player {
    width: 100%;
    margin: 2rem 0 0;
    padding: 1rem;
    background: var(--bg-secondary);
    text-align: left;
  }

  .audio-player h3 {
    font-size: 0.8rem;
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: 0.5rem;
  }

  .audio-player audio {
    width: 100%;
    height:1.5rem;
    max-width: none;
  }

  .article-content :global(h1),
  .article-content :global(h2),
  .article-content :global(h3),
  .article-content :global(h4),
  .article-content :global(h5),
  .article-content :global(h6) {
    color: var(--text-primary);
    margin-top: 2rem;
    margin-bottom: 1rem;
    line-height: 1.3;
  }

  .article-content :global(h1) {
    font-size: 2rem;
  }

  .article-content :global(h2) {
    font-size: 1.75rem;
  }

  .article-content :global(h3) {
    font-size: 1.5rem;
  }

  .article-content :global(p) {
    color: var(--text-secondary);
    line-height: 1.7;
    margin-bottom: 1.5rem;
  }

  .article-content :global(ul),
  .article-content :global(ol) {
    color: var(--text-secondary);
    margin-bottom: 1.5rem;
    padding-left: 2rem;
  }

  .article-content :global(li) {
    margin-bottom: 0.5rem;
    line-height: 1.6;
  }

  .article-content :global(code) {
    background: var(--bg-tertiary);
    color: var(--text-primary);
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
    font-size: 0.9em;
  }

  .article-content :global(pre) {
    background: var(--bg-tertiary);
    color: var(--text-primary);
    padding: 1.5rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 1.5rem 0;
    border: 1px solid var(--border-color);
  }

  .article-content :global(pre code) {
    background: none;
    padding: 0;
    border-radius: 0;
  }

  .article-content :global(blockquote) {
    border-left: 4px solid var(--text-accent);
    padding-left: 1.5rem;
    margin: 2rem 0;
    color: var(--text-secondary);
    font-style: italic;
  }

  .article-content :global(a) {
    color: var(--text-accent);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .article-content :global(a:hover) {
    color: oklch(55% 0.2 45);
  }

  .article-content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 2rem 0;
  }

  .author-section {
    margin-top: 4rem;
    padding: 2rem 0;
    border-top: 1px solid var(--border-color);
  }

  .author-section h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 2rem;
    text-align: center;
  }

  .author-card {
    display: flex;
    align-items: center;
    gap: 2rem;
    background: var(--bg-secondary);
    padding: 2rem;
    border-radius: 12px;
    border: 1px solid var(--border-color);
  }

  .author-avatar-large {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid var(--border-color);
  }

  .author-content {
    flex: 1;
  }

  .author-content .author-name {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-primary);
    margin-bottom: 0.5rem;
  }

  .author-bio {
    font-size: 1rem;
    color: var(--text-secondary);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .author-links {
    display: flex;
    gap: 1rem;
  }

  .author-link {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: var(--bg-primary);
    border: 2px solid var(--border-color);
    color: var(--text-secondary);
    text-decoration: none;
    font-size: 1.2rem;
    transition: all 0.2s ease;
  }

  .author-link:hover {
    background: var(--text-accent);
    border-color: var(--text-accent);
    color: white;
    transform: translateY(-2px);
  }

  .article-navigation {
    margin-top: 4rem;
    text-align: center;
    padding-top: 2rem;
    border-top: 1px solid var(--border-color);
  }

  .back-btn {
    display: inline-block;
    color: var(--text-accent);
    text-decoration: none;
    font-weight: 500;
    font-size: 1.1rem;
    padding: 1rem 2rem;
    border: 2px solid var(--text-accent);
    border-radius: 25px;
    transition: all 0.2s ease;
  }

  .back-btn:hover {
    background: var(--text-accent);
    color: white;
  }
  @media (max-width: 768px) {
    .article-title {
      font-size: 2rem;
    }

    .article-description {
      font-size: 1.1rem;
    }

    .article-meta-section {
      gap: 1.5rem;
    }

    .author-info {
      justify-content: center;
    }

    .article-meta {
      align-items: center;
      text-align: center;
    }

    .author-card {
      flex-direction: column;
      text-align: center;
      gap: 1.5rem;
    }

    .author-links {
      justify-content: center;
    }
  }

    .article-description {
      font-size: 1.1rem;
    }

    .article-meta {
      gap: 1rem;
    }

    .article-content :global(h1) {
      font-size: 1.75rem;
    }

    .article-content :global(h2) {
      font-size: 1.5rem;
    }

    .article-content :global(h3) {
      font-size: 1.25rem;
    }
  }
</style>